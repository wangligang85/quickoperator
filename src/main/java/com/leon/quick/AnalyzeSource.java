/*
 * This file is generated by jOOQ.
 */
package com.leon.quick;


import com.leon.quick.tables.CodeCommit;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalyzeSource extends SchemaImpl {

    private static final long serialVersionUID = -993536386;

    /**
     * The reference instance of <code>analyze_source</code>
     */
    public static final AnalyzeSource ANALYZE_SOURCE = new AnalyzeSource();

    /**
     * The table <code>analyze_source.code_commit</code>.
     */
    public final CodeCommit CODE_COMMIT = com.leon.quick.tables.CodeCommit.CODE_COMMIT;

    /**
     * No further instances allowed
     */
    private AnalyzeSource() {
        super("analyze_source", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            CodeCommit.CODE_COMMIT);
    }
}
