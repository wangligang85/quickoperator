/*
 * This file is generated by jOOQ.
 */
package com.leon.quick.tables.records;


import com.leon.quick.tables.CodeCommit;

import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeCommitRecord extends TableRecordImpl<CodeCommitRecord> implements Record5<String, BigInteger, BigInteger, BigInteger, byte[]> {

    private static final long serialVersionUID = -1943342047;

    /**
     * Setter for <code>analyze_source.code_commit.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>analyze_source.code_commit.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>analyze_source.code_commit.total_commit_num</code>.
     */
    public void setTotalCommitNum(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>analyze_source.code_commit.total_commit_num</code>.
     */
    public BigInteger getTotalCommitNum() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>analyze_source.code_commit.added_file_num</code>.
     */
    public void setAddedFileNum(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>analyze_source.code_commit.added_file_num</code>.
     */
    public BigInteger getAddedFileNum() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>analyze_source.code_commit.added_line_num</code>.
     */
    public void setAddedLineNum(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>analyze_source.code_commit.added_line_num</code>.
     */
    public BigInteger getAddedLineNum() {
        return (BigInteger) get(3);
    }

    /**
     * Setter for <code>analyze_source.code_commit.total_commit_num_series</code>.
     */
    public void setTotalCommitNumSeries(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>analyze_source.code_commit.total_commit_num_series</code>.
     */
    public byte[] getTotalCommitNumSeries() {
        return (byte[]) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, BigInteger, BigInteger, BigInteger, byte[]> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, BigInteger, BigInteger, BigInteger, byte[]> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return CodeCommit.CODE_COMMIT.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field2() {
        return CodeCommit.CODE_COMMIT.TOTAL_COMMIT_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field3() {
        return CodeCommit.CODE_COMMIT.ADDED_FILE_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field4() {
        return CodeCommit.CODE_COMMIT.ADDED_LINE_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field5() {
        return CodeCommit.CODE_COMMIT.TOTAL_COMMIT_NUM_SERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component2() {
        return getTotalCommitNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component3() {
        return getAddedFileNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component4() {
        return getAddedLineNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component5() {
        return getTotalCommitNumSeries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value2() {
        return getTotalCommitNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value3() {
        return getAddedFileNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value4() {
        return getAddedLineNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value5() {
        return getTotalCommitNumSeries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeCommitRecord value1(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeCommitRecord value2(BigInteger value) {
        setTotalCommitNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeCommitRecord value3(BigInteger value) {
        setAddedFileNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeCommitRecord value4(BigInteger value) {
        setAddedLineNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeCommitRecord value5(byte... value) {
        setTotalCommitNumSeries(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeCommitRecord values(String value1, BigInteger value2, BigInteger value3, BigInteger value4, byte[] value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CodeCommitRecord
     */
    public CodeCommitRecord() {
        super(CodeCommit.CODE_COMMIT);
    }

    /**
     * Create a detached, initialised CodeCommitRecord
     */
    public CodeCommitRecord(String username, BigInteger totalCommitNum, BigInteger addedFileNum, BigInteger addedLineNum, byte[] totalCommitNumSeries) {
        super(CodeCommit.CODE_COMMIT);

        set(0, username);
        set(1, totalCommitNum);
        set(2, addedFileNum);
        set(3, addedLineNum);
        set(4, totalCommitNumSeries);
    }
}
